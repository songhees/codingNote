<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sample.dao.EmployeeDao">

	<select id="getAllEmployees" resultType="com.sample.dto.EmployeeListDto">
		select e.employee_id		as id, 
				e.first_name 		as firstName, 
				e.last_name 		as lastName, 
				j.job_id 			as jobId, 
				j.job_title 		as jobTitle, 
				d.department_id 	as departmentId, 
				d.department_name 	as departmentName
		from employees e, departments d, jobs j
		where e.department_id = d.department_id(+)
		and e.job_id = j.job_id
		order by e.employee_id
	</select>
	<select id="getAllManagers" resultType="com.sample.dto.EmployeeListDto">
		select distinct d.manager_id as id, 
                e.first_name as firstName,
				e.last_name as lastName,
                d.department_id as departmentId,
                d.department_name as departmentName
		from employees e, departments d
		where d.manager_id = e.employee_id
		order by firstName
	</select>
	<select id="getAllEmployeesByDepartment" parameterType="int" resultType="com.sample.vo.Employee">
		select employee_id as id,
				first_name as firstName,
				last_name as lastName
		from employees
		where department_id = #{value}
		order by employee_id
	</select>
	
	<insert id="insertEmployee" parameterType="com.sample.vo.Employee">
		insert into employees
		(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, manager_id, department_id)
		values
		(employees_seq.nextval, #{firstName}, #{lastName}, #{email}, #{phoneNumber}, sysdate, #{jobId}, #{salary}, #{managerId}, #{departmentId})
	</insert>
	
	<update id="updateEmployee" parameterType="com.sample.vo.Employee">
		update employees
		set
			email = #{email},
			phone_number = #{phoneNumber},
			job_id = #{jobId},
			salary = #{salary},
			commission_pct = #{commissionPct},
			manager_id = #{managerId},
			department_id = #{departmentId}
		where employee_id = #{id}
	</update>
	
	<select id="getEmployeeById" parameterType="int" resultType="com.sample.dto.EmployeeDetailDto">
		select e.employee_id 		as id, 
				e.first_name 		as firstName, 
				e.last_name 		as lastName, 
				e.phone_number 		as phoneNumber, 
				e.email 			as email, 
				e.hire_date 		as hireDate, 
				e.salary 			as salary, 
				e.commission_pct 	as commissionPct,
        		j.job_id 			as jobId, 
        		j.job_title 		as jobTitle, 
        		d.department_id 	as departmentId, 
        		d.department_name 	as departmentName,
        		m.employee_id 		as managerId, 
        		m.first_name || ' ' || m.last_name as managerName
		from employees e, employees m, departments d, jobs j
		where e.employee_id = #{value} 
		and e.department_id = d.department_id(+)
		and e.job_id = j.job_id
		and e.manager_id = m.employee_id(+)
	</select>
</mapper>